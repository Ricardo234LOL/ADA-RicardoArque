import matplotlib.pyplot as plt

# Tamaños de archivo
file_sizes_cpp = [100, 500, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 100000]

# Tiempos de ejecución por algoritmo
bubble_sort_times_cpp = [3.8321353186055993, 28.310643820449577, 174.07293089472356, 1458.94189019456, 2346.4783530153977, 2217.210342130221, 
                         10694.293271583001, 11019.92952294211, 24037.391047323596, 24764.407752978666, 18242.21735970855, 57565.44759045828, 
                         225946.98523307047, 667012.5632294272, 652490.4181966549, 1428965.1990541774, 1079920.063322016, 1484501.4715460846, 1319533.1761483126]

selection_sort_times_cpp = [1.7482756419262862, 83.67423141876203, 290.0727410574959, 988.5018457001967, 2516.833096112581, 6005.633087871432, 
                            8537.01115977518, 17959.661145175396, 12743.205692382007, 16817.883018286444, 13092.397683327195, 130516.81234178948, 
                            426036.9770845531, 674995.0148336061, 561731.7409897187, 1618105.049453022, 2203437.161652558, 2598858.1929513584, 2344805.455194919]

insertion_sort_times_cpp = [4.405223564964339, 97.14481543207357, 417.4240495022749, 1170.5369498619827, 4215.570959787019, 5315.213372811265, 
                            4851.132530208499, 14458.329753282143, 5477.255482444828, 8166.631992291087, 46989.324857817504, 186507.47785082276, 
                            385505.35076358356, 631418.1232955682, 1184206.5304704483, 1006245.9806178012, 1988075.488530068, 2757901.6769084474, 1448720.317027692]

merge_sort_times_cpp = [0.025361709837777982, 0.1649309429071767, 0.4289671690488321, 0.3787282030428415, 1.2799636461671025, 0.6652439391310504, 
                        3.9815922458700688, 1.3944138636926457, 5.012290444919072, 7.128338354151926, 3.5346474655735305, 5.935100558133186, 
                        20.037498182043855, 4.762974509299248, 51.51027413036301, 29.026852834386077, 75.79905153241546, 25.99960392872378, 90.07426460411804]

quick_sort_times_cpp = [0.02001261889381252, 0.268998082460281, 0.4455093018372947, 0.6725202107419855, 1.9497993035260686, 2.262669998845875, 
                        2.8140423969353083, 3.8910254227343892, 3.678747437217153, 4.162795646204525, 4.945553790501156, 14.14514679148756, 
                        9.843807733812328, 22.60363969187031, 13.178799970479988, 14.680403610720235, 46.815737048131695, 69.58929151058162, 87.74186336641763]

heap_sort_times_cpp = [0.016225687568210183, 0.12849343549785394, 0.40447001405872385, 0.4445810868638664, 0.6916467867056972, 0.9204687506258474, 
                       3.8111256046773936, 3.4177619195353826, 2.272399916926405, 3.767584002430235, 4.506610816210818, 2.0825670027074596, 
                       18.211276696382804, 40.216882621886704, 8.108697241677367, 20.75144324487471, 64.49295416247165, 57.00870219277482, 91.25577047878573]

counting_sort_times_cpp = [0.0033517346623367565, 0.01300341430729247, 0.014174536099933289, 0.020677553600508734, 0.09174908809075444, 
                           0.08004974873010678, 0.1556546719270847, 0.21367597963187834, 0.13563658920660915, 0.18541879974920036, 0.39235114586899456, 
                           0.5718887922434764, 1.465221499009761, 0.4979856501024266, 2.2064751252825827, 1.525156432114706, 1.5815248150023686, 
                           2.8770139593611184, 3.2666098691224215]

# Graficar los tiempos de ejecución de los algoritmos
plt.figure(figsize=(10, 6))

plt.plot(file_sizes_cpp, bubble_sort_times_cpp, label="Bubble Sort", marker='o')
plt.plot(file_sizes_cpp, selection_sort_times_cpp, label="Selection Sort", marker='o')
plt.plot(file_sizes_cpp, insertion_sort_times_cpp, label="Insertion Sort", marker='o')
plt.plot(file_sizes_cpp, merge_sort_times_cpp, label="Merge Sort", marker='o')
plt.plot(file_sizes_cpp, quick_sort_times_cpp, label="Quick Sort", marker='o')
plt.plot(file_sizes_cpp, heap_sort_times_cpp, label="Heap Sort", marker='o')
plt.plot(file_sizes_cpp, counting_sort_times_cpp, label="Counting Sort", marker='o')

plt.xlabel("Tamaño del archivo")
plt.ylabel("Tiempo de ejecución (segundos)")
plt.title("Comparación de tiempos de algoritmos de ordenamiento (C++)")
plt.legend()
plt.grid(True)
plt.xscale("log")
plt.yscale("log")

plt.tight_layout()
plt.show()
